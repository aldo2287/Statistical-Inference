# load the dataset here

pupil_data <- read_csv("Exam Data.csv")
Warning: One or more parsing issues, call `problems()` on your data frame for details,
e.g.:
  dat <- vroom(...)
  problems(dat)
Rows: 49 Columns: 12
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr (4): school, agestart, RRstart, RRend
dbl (8): ID, gender, ageend, BASstart, BASend, EAL, EMB, PP

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
#this csv file is been downloaded in my project folder - can then be loaded by calling the name of the file
# further data preparation here

head(pupil_data)
# A tibble: 6 × 12
     ID school gender agestart ageend BASstart BASend   EAL   EMB    PP RRstart
  <dbl> <chr>   <dbl> <chr>     <dbl>    <dbl>  <dbl> <dbl> <dbl> <dbl> <chr>  
1   169 K3          1 89           90       37     43     2     2     1 20     
2   164 K3          2 73           74       31     38     1     2     2 13     
3   216 M           1 72           73       46     45     2     2     2 19     
4   176 M2          2 97           99       46     51     2     2     2 purple 
5    59 M           1 91           92       50     60     2     2     2 Gold   
6    54 M           1 91           92       32     38     2     2     2 Green  
# ℹ 1 more variable: RRend <chr>
str(pupil_data)
spc_tbl_ [49 × 12] (S3: spec_tbl_df/tbl_df/tbl/data.frame)
 $ ID      : num [1:49] 169 164 216 176 59 54 122 61 190 256 ...
 $ school  : chr [1:49] "K3" "K3" "M" "M2" ...
 $ gender  : num [1:49] 1 2 1 2 1 1 NA 2 2 1 ...
 $ agestart: chr [1:49] "89" "73" "72" "97" ...
 $ ageend  : num [1:49] 90 74 73 99 92 92 80 92 94 86 ...
 $ BASstart: num [1:49] 37 31 46 46 50 32 49 37 37 43 ...
 $ BASend  : num [1:49] 43 38 45 51 60 38 59 42 45 47 ...
 $ EAL     : num [1:49] 2 1 2 2 2 2 2 2 2 1 ...
 $ EMB     : num [1:49] 2 2 2 2 2 2 2 2 2 2 ...
 $ PP      : num [1:49] 1 2 2 2 2 2 1 2 2 2 ...
 $ RRstart : chr [1:49] "20" "13" "19" "purple" ...
 $ RRend   : chr [1:49] "21" "14" "20" "purple" ...
 - attr(*, "spec")=
  .. cols(
  ..   ID = col_double(),
  ..   school = col_character(),
  ..   gender = col_double(),
  ..   agestart = col_character(),
  ..   ageend = col_double(),
  ..   BASstart = col_double(),
  ..   BASend = col_double(),
  ..   EAL = col_double(),
  ..   EMB = col_double(),
  ..   PP = col_double(),
  ..   RRstart = col_character(),
  ..   RRend = col_character()
  .. )
 - attr(*, "problems")=<externalptr> 
sum(is.na(pupil_data))
[1] 32
colSums(is.na(pupil_data))
      ID   school   gender agestart   ageend BASstart   BASend      EAL 
       0        0        2        0        0        0        0        4 
     EMB       PP  RRstart    RRend 
       4        5        7       10 
# with the above code I am previewing the data checking the structure and counting the missing values

# the first variable I will handle the manipulation is 'gender' by assigns and unknown value to NA

pupil_data$gender[is.na(pupil_data$gender)] <- "unknown"

# the second variable to handle is 'agestart' as it is a character variable, I will convert it to numeric

unique(pupil_data$agestart) # with this function I can see the unique values of agestart identifying an issue with the charterer 'm' in some of the values
 [1] "89"  "73"  "72"  "97"  "91"  "79"  "92"  "85"  "96"  "106" "81"  "87" 
[13] "76"  "99"  "88"  "101" "109" "86"  "83"  "98"  "110" "82m" "100" "70" 
[25] "78"  "74"  "86m"
pupil_data$agestart <- as.numeric(gsub("m", "", pupil_data$agestart)) # removing m from the numerical values and converting the entire column in numeric

print(pupil_data$agestart) # checking output
 [1]  89  73  72  97  91  91  79  91  92  85  96 106  81  87  76  87  81  99  88
[20] 101  97  87  87  81 106 109  86  79  83  99  87  81  98  87 110  87  82  88
[39]  97  89 100  70  78  74  86  87  86  86  83
# handling EAL (English as addition language) and EMB (pupils with ethnic minority) by setting the NA values to 'unknown'

pupil_data$EAL[is.na(pupil_data$EAL)] <- "unknown"
pupil_data$EMB[is.na(pupil_data$EMB)] <- "unknown"

table(pupil_data$EAL, useNA = "always") 

      1       2 unknown    <NA> 
      9      36       4       0 
table(pupil_data$EMB, useNA = "always")

      1       2 unknown    <NA> 
     11      34       4       0 
# Drop unnecessary column for this analysis (PP)

pupil_data <- pupil_data |> select(-PP)

# checking the final structure and checking missing values

str(pupil_data)
tibble [49 × 11] (S3: tbl_df/tbl/data.frame)
 $ ID      : num [1:49] 169 164 216 176 59 54 122 61 190 256 ...
 $ school  : chr [1:49] "K3" "K3" "M" "M2" ...
 $ gender  : chr [1:49] "1" "2" "1" "2" ...
 $ agestart: num [1:49] 89 73 72 97 91 91 79 91 92 85 ...
 $ ageend  : num [1:49] 90 74 73 99 92 92 80 92 94 86 ...
 $ BASstart: num [1:49] 37 31 46 46 50 32 49 37 37 43 ...
 $ BASend  : num [1:49] 43 38 45 51 60 38 59 42 45 47 ...
 $ EAL     : chr [1:49] "2" "1" "2" "2" ...
 $ EMB     : chr [1:49] "2" "2" "2" "2" ...
 $ RRstart : chr [1:49] "20" "13" "19" "purple" ...
 $ RRend   : chr [1:49] "21" "14" "20" "purple" ...
colSums(is.na(pupil_data))
      ID   school   gender agestart   ageend BASstart   BASend      EAL 
       0        0        0        0        0        0        0        0 
     EMB  RRstart    RRend 
       0        7       10 
summary(pupil_data$RRstart)
   Length     Class      Mode 
       49 character character 
summary(pupil_data$RRend)
   Length     Class      Mode 
       49 character character 
# checking the characteristics of the reading level (RR) variables
unique(pupil_data$RRstart)
 [1] "20"     "13"     "19"     "purple" "Gold"   "Green"  "17"     "Orange"
 [9] "26"     "4"      "12"     "15"     "24"     "Purple" "7"      "11"    
[17] "18"     "21"     "white"  NA       "green"  "6"      "10"     "8"     
[25] "14"    
unique(pupil_data$RRend)
 [1] "21"     "14"     "20"     "purple" "White"  "Gold"   "19"     "Green" 
 [9] "18"     "27"     "4"      "22"     "13"     "25"     NA       "12"    
[17] "white"  "7"      "11"     "gold"   "10"     "16"     "8"     
# as per the exercise guide I will ignore the colours in this two variables and convert them in numeric 
# Remove non-numeric characters and convert to numeric
pupil_data$RRstart <- as.numeric(gsub("colour", "", pupil_data$RRstart))
Warning: NAs introduced by coercion
pupil_data$RRend   <- as.numeric(gsub("colour", "", pupil_data$RRend))
Warning: NAs introduced by coercion
# double Check how many NA are introduced
colSums(is.na(pupil_data[, c("RRstart", "RRend")]))
RRstart   RRend 
     16      16 
mean(pupil_data$RRstart, na.rm = TRUE)
[1] 15.36364
mean(pupil_data$RRend, na.rm = TRUE)
[1] 17.18182
# filling NA data with means as choice towards the exercise to remove missing values
pupil_data$RRstart[is.na(pupil_data$RRstart)] <- mean(pupil_data$RRstart, na.rm = TRUE)
pupil_data$RRend[is.na(pupil_data$RRend)]     <- mean(pupil_data$RRend, na.rm = TRUE)

# final structure manipulation and checks

str(pupil_data)
tibble [49 × 11] (S3: tbl_df/tbl/data.frame)
 $ ID      : num [1:49] 169 164 216 176 59 54 122 61 190 256 ...
 $ school  : chr [1:49] "K3" "K3" "M" "M2" ...
 $ gender  : chr [1:49] "1" "2" "1" "2" ...
 $ agestart: num [1:49] 89 73 72 97 91 91 79 91 92 85 ...
 $ ageend  : num [1:49] 90 74 73 99 92 92 80 92 94 86 ...
 $ BASstart: num [1:49] 37 31 46 46 50 32 49 37 37 43 ...
 $ BASend  : num [1:49] 43 38 45 51 60 38 59 42 45 47 ...
 $ EAL     : chr [1:49] "2" "1" "2" "2" ...
 $ EMB     : chr [1:49] "2" "2" "2" "2" ...
 $ RRstart : num [1:49] 20 13 19 15.4 15.4 ...
 $ RRend   : num [1:49] 21 14 20 17.2 17.2 ...
colSums(is.na(pupil_data))
      ID   school   gender agestart   ageend BASstart   BASend      EAL 
       0        0        0        0        0        0        0        0 
     EMB  RRstart    RRend 
       0        0        0 
summary(pupil_data)
       ID           school             gender             agestart     
 Min.   :  3.0   Length:49          Length:49          Min.   : 70.00  
 1st Qu.: 79.0   Class :character   Class :character   1st Qu.: 82.00  
 Median :137.0   Mode  :character   Mode  :character   Median : 87.00  
 Mean   :130.3                                         Mean   : 88.41  
 3rd Qu.:169.0                                         3rd Qu.: 96.00  
 Max.   :256.0                                         Max.   :110.00  
     ageend          BASstart         BASend          EAL           
 Min.   : 71.00   Min.   :11.00   Min.   :20.00   Length:49         
 1st Qu.: 83.00   1st Qu.:31.00   1st Qu.:38.00   Class :character  
 Median : 88.00   Median :42.00   Median :51.00   Mode  :character  
 Mean   : 90.12   Mean   :40.06   Mean   :47.51                     
 3rd Qu.: 98.00   3rd Qu.:50.00   3rd Qu.:56.00                     
 Max.   :112.00   Max.   :65.00   Max.   :74.00                     
     EMB               RRstart          RRend      
 Length:49          Min.   : 4.00   Min.   : 4.00  
 Class :character   1st Qu.:14.00   1st Qu.:16.00  
 Mode  :character   Median :15.36   Median :17.18  
                    Mean   :15.36   Mean   :17.18  
                    3rd Qu.:18.00   3rd Qu.:20.00  
                    Max.   :26.00   Max.   :27.00  
# handling groups with low frequency counts
school_counts <- table (pupil_data_complete$school)
Error: object 'pupil_data_complete' not found
print(school_counts)
Error: object 'school_counts' not found
pupil_data |>
  count(school) |>
  mutate(pct = n / sum(n)) |>
  ggplot(aes(x = reorder(school, -pct), y = pct)) +
  geom_col(fill = "steelblue") +
  scale_y_continuous(labels = scales::percent) +
  labs(title = "Proportion of Pupils by School",
       x = "School", y = "Percentage") +
  theme_minimal()

school_counts <- table(pupil_data$school) # count how many pupils are per school
print(school_counts)

 A  F  H  K K2 K3  M M2 M3  R  S  T W1 W2 W3 
 1  1  3 11  2  3  9  2  1  1  4  2  2  4  3 
# I am identifying the schools with equal or less then 4 pupils and I am creating a new column and group them together and reorder them in a new plot

low_freq_schools <- names(school_counts[school_counts <= 4])
print(low_freq_schools) 
 [1] "A"  "F"  "H"  "K2" "K3" "M2" "M3" "R"  "S"  "T"  "W1" "W2" "W3"
pupil_data$school <- ifelse(pupil_data$school %in% low_freq_schools, "Other", pupil_data$school)
table(pupil_data$school)
    K     M Other 
   11     9    29 
ggplot(pupil_data, aes(x = school)) +
  geom_bar(fill = "steelblue") +
  geom_text(stat = "count", aes(label = after_stat(count)), vjust = -0.5, size = 4) +  # Add count labels above bars
  labs(title = "Pupil Distribution by schools (Low Count Grouped as 'Other')",
       subtitle = "Grouping applied to schools with equal or less then 4 pupils",
       x = "School", y = "Number of Pupils") +
  theme_minimal(base_size = 13) +  # Larger base font
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) 
# checking proportions as part of descriptive statistics 

school_percent <- round(100 * prop.table(table(pupil_data$school)), 2)

print(school_percent)

    K     M Other 
22.45 18.37 59.18 
table(pupil_data$school, pupil_data$gender)

        1  2 unknown
  K      5  6       0
  M      8  1       0
  Other 15 12       2
round(prop.table(table(pupil_data$school, pupil_data$gender), margin = 1) * 100, 2)
       
            1     2 unknown
  K     45.45 54.55    0.00
  M     88.89 11.11    0.00
  Other 51.72 41.38    6.90
ggplot(pupil_data, aes(x = school, fill = gender)) +
  geom_bar(position = "fill") + 
  scale_y_continuous(labels = scales::percent) +
  labs(
    title = "Gender Proportions by School Group",
    subtitle = "Labels: 1 = Female, 2 = Male, 3 = Unknown",
    x = "School Group", y = "Percentage",
    fill = "Gender"
  ) +
  theme_minimal(base_size = 13)

# comparing reading level at te end of the intervention in a plot for visualization

ggplot(pupil_data, aes(x = school, y = RRend)) +
  geom_boxplot(fill = "lightblue") +
  labs(
    title = "Reading level Scores by School Group",
    x = "School Group", y = "End Score"
  ) +
  theme_minimal()

pupil_data$BASgain <- pupil_data$BASend - pupil_data$BASstart

summary(pupil_data$BASgain)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 -1.000   4.000   6.000   7.449  10.000  23.000 
# compare BAS gain by gender

pupil_data |>
  group_by(gender) |>
  summarise(
    count = n(),
    mean_gain = round(mean(BASgain, na.rm = TRUE), 2),
    median_gain = median(BASgain, na.rm = TRUE),
    sd_gain = round(sd(BASgain, na.rm = TRUE), 2)
  )
# A tibble: 3 × 5
  gender  count mean_gain median_gain sd_gain
  <chr>   <int>     <dbl>       <dbl>   <dbl>
1 1          28      7.07           6    5.47
2 2          19      8.05           7    4.25
3 unknown     2      7              7    4.24
ggplot(pupil_data, aes(x = gender, y = BASgain, fill = gender)) +
  geom_boxplot() +
  labs(
    title = "BAS Gain by Gender",
    x = "Gender",
    y = "BAS Gain Score"
  ) +
  scale_x_discrete(labels = c("1" = "Female", "2" = "Male", "unknown" = "Unknown")) +
  theme_minimal()

# most pupils improved their British Ability Score with one pupil with 1 in regression of -1 and a higher of +23 showing the intervention was generally effective 

# final reporting: Does the effectiveness of the intervention differ between school groups?

# Remove any NA or unknown school values if needed

filtered_school_data <- pupil_data |>
  filter(!is.na(school))  # or add extra filtering if needed

# Boxplot of BASgain by school

ggplot(filtered_school_data, aes(x = school, y = BASgain)) +
  geom_boxplot(fill = "lightgreen", color = "black") +
  labs(title = "BASgain by School",
       x = "School",
       y = "Reading Gain (BASgain)") +
  theme_minimal()

# Summary stats per school group
group_summary <- filtered_school_data |>
  group_by(school) %>%
  summarise(
    mean_gain = round(mean(BASgain, na.rm = TRUE), 2),
    sd_gain = round(sd(BASgain, na.rm = TRUE), 2),
    count = n()
  )
print(group_summary)
# A tibble: 3 × 4
  school mean_gain sd_gain count
  <chr>      <dbl>   <dbl> <int>
1 K           7.09    4.59    11
2 M           6.33    5.5      9
3 Other       7.93    4.96    29
# One-way ANOVA test to compare means across schools
anova_result <- aov(BASgain ~ school, data = filtered_school_data)
summary(anova_result)
            Df Sum Sq Mean Sq F value Pr(>F)
school       2   19.4   9.676   0.389   0.68
Residuals   46 1142.8  24.843          

